services:
  mydatabase:
    image: postgres:latest
    container_name: mydatabase
    restart: always  # Ensures PostgreSQL restarts if it crashes
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: mydatabase
    ports:
      - "5436:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persistent storage for DB
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "mydatabase" ]
      interval: 10s
      retries: 5
      timeout: 5s


  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: itsaaa-app1
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      mydatabase:
        condition: service_healthy  # Waits for PostgreSQL to be ready
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://mydatabase:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123
    networks:
      - backend
    labels:
      - "autoheal=true"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://logalhost:8080/queues", "||", "exit", "1" ]
      interval: 10s
      retries: 3
      timeout: 30s
      start_period: 60s

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: itsaaa-app2
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      mydatabase:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://mydatabase:5432/mydatabase
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123
    networks:
      - backend
    labels:
      - "autoheal=true"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "'http://localhost:8080/queues'", "||", "exit", "1" ]
      interval: 10s
      retries: 3
      timeout: 30s
      start_period: 60s

  autoheal:
    image: willfarrell/autoheal:latest
    tty: true
    restart: always
    environment:
      - AUTOHEAL_INTERVAL=5
      - AUTOHEAL_START_PERIOD=10
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=10
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  nginx-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - app1
      - app2
    networks:
      - backend

volumes:
  pgdata:  # Persistent PostgreSQL data

networks:
  backend:
    driver: bridge
